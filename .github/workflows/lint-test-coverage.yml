name: lint-test-coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-eslint:
    name: Lint → ESLint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '24'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ github.ref_name }}-${{ hashFiles('frontend/**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ github.ref_name }}-
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint (verify only)
        run: npm run lint

      - name: Upload ESLint report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: eslint-report
          path: eslint-report.json

  lint-prettier:
    name: Lint → Prettier
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '24'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ github.ref_name }}-${{ hashFiles('frontend/**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ github.ref_name }}-
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run Prettier (verify only)
        run: npm run prettier:verify

  test-coverage:
    name: Test → Coverage
    runs-on: ubuntu-latest
    needs:
      - lint-eslint
      - lint-prettier
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '24'

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Set CHROME_BIN env
        run: echo "CHROME_BIN=/usr/bin/google-chrome" >> $GITHUB_ENV

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ github.ref_name }}-${{ hashFiles('frontend/**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ github.ref_name }}-
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run tests & generate coverage
        run: npx ng test --watch=false --browsers=ChromeHeadlessCI --code-coverage

      - name: Upload coverage directory
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage/

      - name: Upload Cobertura XML
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cobertura-coverage
          path: coverage/cobertura-coverage.xml
